<?php

/**
 * Implements hook_menu().
 */
function themekey_redirect_menu() {
  $items = array();

  $items['admin/config/user-interface/themekey/redirects'] = array(
    'title' => 'Redirecting Rule Chain',
    'description' => 'Set up rules to redirect the user, depending on Drupal paths or different properties.',
    'access callback' => 'user_access',
    'access arguments' => array('administer theme assignments'),
    'file' => 'themekey_redirect_admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('themekey_redirect_rule_chain_form'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/config/user-interface/themekey/redirects/delete'] = array(
    'title' => 'Delete ThemeKey Rule',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('themekey_redirect_admin_delete_rule_confirm', 1),
    'access callback' => 'user_access',
    'access arguments' => array('administer theme assignments'),
    'file' => 'themekey_redirect_admin.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function themekey_redirect_theme() {
  $items = array(
    'themekey_redirect_rule_chain_form' => array(
      'file' => 'themekey_redirect_admin.inc',
      'render element' => 'form',
    ),
  );
  return $items;
}

function themekey_redirect_format_rule_as_string($themekey_property_id) {
  module_load_include('inc', 'themekey', 'themekey_build');
  return themekey_abstract_format_rule_as_string($themekey_property_id, array(
    'rule' => themekey_redirect_rule_get($themekey_property_id),
  ));
}

/**
 * Loads ThemeKey rule from database.
 *
 * @param $id
 *   id of the rule to be loaded from database
 *
 * @return
 *   the rule as associative array or NULL
 */
function themekey_redirect_rule_get($id) {
  return themekey_abstract_rule_get('themekey_redirect_rules', $id);
}

/**
 * Implements hook_init().
 */
function themekey_redirect_init() {
  if (themekey_is_active()) {
    require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'themekey') . '/themekey_base.inc';
    $parameters = themekey_get_global_parameters();
    $result = themekey_match_rule_childs($parameters, array(
      'table' => 'themekey_redirect_rules',
      'format_rule_as_string_callback' => 'themekey_redirect_format_rule_as_string',
      'check_enabled_callback' => 'themekey_check_css_exists',
    ));
    if (is_array($result) && 'default' != $result['theme']) {
      drupal_alter('themekey_redirect', $result['theme'], $result['rules_matched']);

      $target = $result['theme'] . $_SERVER['REQUEST_URI'];

      if (variable_get('themekey_debug_trace_rule_switching', FALSE)) {
        themekey_set_debug_message('Redirect to %domain. The redirect has been intercepted for debugging. Click this link to proceed: !target', array('%domain' => $result['theme'], '!target' => l($target, $target)));
        drupal_exit();
      }
      else {
        drupal_goto($target);
      }
    }
  }
}

/**
 * Implements hook_help().
 */
function themekey_redirect_help($path, $arg) {
  switch ($path) {
    case 'admin/config/user-interface/themekey/redirects':
      if (!function_exists('themekey_help_properties_form')) {
        module_load_include('inc', 'themekey', 'themekey_help');
      }
      $properties_form = drupal_get_form('themekey_help_properties_form', TRUE);
      $operators_form = drupal_get_form('themekey_help_operators_form', TRUE);
      $text_1 = t('For every page request, Drupal steps through this Redirecting Rule Chain until an activated rule matches or it reaches the end. If a rule matches, the redirect associated with this rule will be performed.');

      return '<p>' . $text_1 . '</p> ' .
        drupal_render($properties_form) .
        drupal_render($operators_form);
  }
}
